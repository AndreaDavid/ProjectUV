{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "models": [
            "model_lecturas",
            "model_items_navigation",
            "model_usuario"
        ],
        "name": "ProjectUV",
        "requires": [
            "Ext.window.Toast"
        ],
        "stores": [
            "store_data",
            "store_navigation_tree",
            "store_login"
        ],
        "views": [
            "vtn_register",
            "pnl_main",
            "pnl_graficas",
            "panellinks",
            "pnl_UVI",
            "map_panel"
        ]
    },
    "name": "Application",
    "designerId": "application",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    ""
                ],
                "fn": "launch",
                "implHandler": [
                    "ProjectUV.globals = {",
                    "",
                    "    DEFAULTRANGE:1,",
                    "    MENSAJE_ERROR:'ERROR EN EL SERVIDOR',",
                    "    SEMANA:7,",
                    "    MES:30",
                    "};",
                    "",
                    "//ejecutar cuando se inicia la app",
                    "Ext.getCmp(\"main\").hide();//oculta main",
                    "var store = Ext.getStore(\"store_login\");",
                    "store.load({",
                    "    callback: function(records, operation, success){//traer",
                    "        Ext.getCmp(\"main\").show();",
                    "        if(success){",
                    "            ProjectUV.app.fn_connect_websocket();",
                    "            Ext.getCmp(\"ctn_main\").removeAll();",
                    "            Ext.getCmp(\"ctn_main\").add(Ext.widget(\"pnl_main\"));",
                    "        }",
                    "        else{",
                    "            if(operation===undefined||operation.error!==\"noSesion\"){",
                    "                if(Ext.getCmp(\"toast\")===undefined){",
                    "                    Ext.toast({",
                    "                        timeout: 2000,",
                    "                        id:\"toast\",",
                    "                        html: '<center>'+ProjectUV.globals.MENSAJE_ERROR+'</center>',",
                    "                        title: 'Alerta',",
                    "                        width: 300,",
                    "                        align: 't'",
                    "                    });",
                    "                }",
                    "            }",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "launch",
            "designerId": "d1c0daee-d02a-41c9-a4e9-602e2f374ac5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "fn_render_menu",
                "implHandler": [
                    "",
                    "//MANEJO DEL GRID",
                    "var treeStore = Ext.getStore('store_navigation_tree');",
                    "var node = treeStore.getRootNode();",
                    "var childs=Ext.getStore('store_navigation_tree').getRootNode().childNodes;",
                    "",
                    "while(childs.length>0){",
                    "    Ext.getStore('store_navigation_tree').getRootNode().removeChild(childs[0]);",
                    "}",
                    "var treelist = Ext.getCmp(\"navigationTreeList\");",
                    "treelist.on(\"selectionchange\",function(){",
                    "",
                    "});",
                    "//Esta funci贸n permite realizar el salto o interacci贸n entre los paneles de EMA,",
                    "//la gesti贸n de cuenta o las aplicaciones",
                    "function viewsChange(){",
                    "    for (var x in treeStore.byIdMap){",
                    "        if(x!==\"root\"){",
                    "            treelist.setSelection(treeStore.byIdMap[x]);",
                    "            break;",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "",
                    "node.appendChild({",
                    "    text: '<label data-qtip=graficas>Graficas</label>',",
                    "    id: \"graficas\",",
                    "    iconCls: 'icon-stats-dots',",
                    "    leaf: true",
                    "});",
                    "/*",
                    "node.appendChild({",
                    "    text: '<label data-qtip=graficas>Graficas ultima semana</label>',",
                    "    id: \"graficasSemana\",",
                    "    iconCls: 'icon-stats-dots',",
                    "    leaf: true",
                    "});",
                    "",
                    "node.appendChild({",
                    "    text: '<label data-qtip=graficas>Graficas ultimo mes</label>',",
                    "    id: \"graficasMes\",",
                    "    iconCls: 'icon-stats-dots',",
                    "    leaf: true",
                    "});",
                    "",
                    "node.appendChild({",
                    "    text: '<label data-qtip=graficas>Informacion</label>',",
                    "    id: \"inf1\",",
                    "    iconCls: 'iconInf',",
                    "    leaf: true",
                    "});",
                    "node.appendChild({",
                    "    text: '<label data-qtip=graficas>informacion</label>',",
                    "    id: \"inf2\",",
                    "    iconCls: 'iconInf',",
                    "    leaf: true",
                    "});*/",
                    "node.appendChild({",
                    "    text: '<label data-qtip=graficas>informacion</label>',",
                    "    id: \"informacion\",",
                    "    iconCls: 'icon-info',",
                    "    leaf: true",
                    "});",
                    "",
                    "",
                    "var treelist = Ext.getCmp(\"navigationTreeList\");",
                    "var sel;",
                    "treelist.setSelection(0);",
                    "treelist.on(\"selectionchange\",treelist.selectionchange);",
                    "//Esta funci贸n es la que va a encargarse de",
                    "treelist.setSelection(childs[0]);",
                    ""
                ]
            },
            "name": "fn_render_menu",
            "designerId": "25b4e3d2-b193-4ae6-97ee-f52112af1e53"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "uvi"
                ],
                "fn": "fn_actualizar_uvi",
                "implHandler": [
                    "var a = Ext.getCmp(\"containerUVI\");",
                    "if(a!==undefined){//para asegurar que la grafica este renderizada",
                    "    var val = uvi;",
                    "    var $circle = $('#svg #bar');",
                    "",
                    "    if (isNaN(val)) {",
                    "        val = 0;",
                    "    }",
                    "    else{",
                    "        var r = $circle.attr('r');",
                    "        var c = Math.PI*(r*2);",
                    "",
                    "        if (val < 0) { val = 0;}",
                    "        if (val > 11) { val = 11;}",
                    "",
                    "        var pct = ((11-val)/11)*c;",
                    "",
                    "        $circle.css({ strokeDashoffset: pct});",
                    "        var color = \"\";",
                    "        switch(val) {",
                    "            case 0:",
                    "                color = \"#4eb400\";",
                    "                break;",
                    "            case 1:",
                    "                color = \"#4eb400\";",
                    "                break;",
                    "            case 2:",
                    "                color = \"#a0ce00\";",
                    "                break;",
                    "            case 3:",
                    "                color = \"#f7e400\";",
                    "                break;",
                    "            case 4:",
                    "                color = \"#f8b600\";",
                    "                break;",
                    "            case 5:",
                    "                color = \"#f88700\";",
                    "                break;",
                    "            case 6:",
                    "                color = \"#f85900\";",
                    "                break;",
                    "            case 7:",
                    "                color = \"#e82c0e\";",
                    "                break;",
                    "            case 8:",
                    "                color = \"#d8001d\";",
                    "                break;",
                    "            case 9:",
                    "                color = \"#ff0099\";",
                    "                break;",
                    "            case 10:",
                    "                color = \"#b54cff\";",
                    "                break;",
                    "            case 11:",
                    "                color = \"#998cff\";",
                    "                break;",
                    "            default:",
                    "                color =\"#212121\";",
                    "        }",
                    "        $circle.css({ stroke: color});",
                    "        $('#cont').attr('data-pct',val);",
                    "    }",
                    "",
                    "}",
                    ""
                ]
            },
            "name": "fn_actualizar_uvi",
            "designerId": "f39da624-2367-4c87-ba7d-9c288a1dfebd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "fn_connect_websocket",
                "implHandler": [
                    "",
                    "",
                    "if(ProjectUV.globals.OBJECTSOCKET===undefined){//esta definido websocket",
                    "    this.socket= new SockJS(document.location.origin+document.location.pathname+'websocket-uvi');//creaar varible al entorno actual",
                    "    this.stompClient = Stomp.over(this.socket);//stomp:es un cliente para el websocket",
                    "",
                    "    var me=this;//guardar el entorno general en me",
                    "    me.stompClient.connect({}, function (frame) {//conectando el cliente del websocket al websocket",
                    "        ProjectUV.globals.OBJECTSOCKET = me;//guarda en una variable global el estado actual",
                    "        me.stompClient.subscribe('/topic/notify', function (greeting) {//abren un canal dentro del websocket",
                    "            var respuesta=Ext.decode(greeting.body);",
                    "        });",
                    "",
                    "        me.stompClient.subscribe('/topic/updateuvi', function (greeting) {",
                    "            var respuesta=Ext.decode(greeting.body);",
                    "            ProjectUV.app.fn_actualizar_uvi(respuesta[0].uvi);",
                    "            ProjectUV.app.fn_actualizar_lectura(ProjectUV.globals.DEFAULTRANGE);",
                    "",
                    "",
                    "        });",
                    "",
                    "        me.stompClient.subscribe('/topic/updatelectura', function (greeting) {",
                    "            var respuesta=Ext.decode(greeting.body);",
                    "",
                    "        });",
                    "    });",
                    "}"
                ]
            },
            "name": "fn_connect_websocket",
            "designerId": "b48ef07d-76b7-485b-8012-94f22d756af3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "rango"
                ],
                "fn": "fn_actualizar_lectura",
                "implHandler": [
                    "if(Ext.getCmp(\"pnl_graficas\")!==undefined){",
                    "",
                    "",
                    "Ext.getCmp(\"pnl_graficas\").fn_create_linechart(rango);",
                    "",
                    "    ",
                    "}"
                ]
            },
            "name": "fn_actualizar_lectura",
            "designerId": "d8b862be-3020-47fc-baed-fa0933d788b6"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "fn_fondo_main",
                "implHandler": [
                    "var a = Ext.getCmp(\"pnl_login\");",
                    "if(a!==undefined){//para asegurar que la grafica este renderizada",
                    "",
                    "    var c = document.getElementById(\"canvas\");",
                    "    var ctx = c.getContext(\"2d\");",
                    "",
                    "    setInterval(function(){",
                    "",
                    "        var rand = function(e) {",
                    "            var number = Math.floor(Math.random() * e);",
                    "            return number;",
                    "        };",
                    "",
                    "        ctx.globalAlpha = 0.1;",
                    "        ctx.shadowBlur = rand(50);",
                    "        ctx.shadowColor= '#' + Math.round(0xffffff * Math.random()).toString(16);",
                    "        ctx.fillStyle = '#' + Math.round(0xffffff * Math.random()).toString(16);",
                    "",
                    "        ctx.beginPath();",
                    "        ctx.arc(rand(2000),rand(2000),1,0,2*Math.PI);",
                    "        ctx.stroke();",
                    "        ctx.beginPath();",
                    "        ctx.moveTo(rand(2000),rand(2000));",
                    "        ctx.lineTo(rand(2000),rand(2000));",
                    "        ctx.arcTo(rand(2000),rand(2000),rand(1000),rand(1000),rand(1000));",
                    "        ctx.lineTo(rand(2000),rand(2000));",
                    "        ctx.strokeStyle = '#' + Math.round(0xffffff * Math.random()).toString(16);",
                    "        ctx.lineWidth = 1;",
                    "        ctx.stroke();",
                    "    }, 30);",
                    "}"
                ]
            },
            "name": "fn_fondo_main",
            "designerId": "1d45ad80-f579-486c-babf-5e3c759f5f51"
        },
        {
            "type": "Ext.Loader",
            "reference": {
                "name": "loader",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "paths": [
                    "{",
                    "'Ext.map':'resources/js/ux/map/google'",
                    "}"
                ]
            },
            "name": "Loader15",
            "designerId": "cffbf0cc-654b-4580-aacf-d29ac4e27a38"
        }
    ]
}